// <auto-generated />
using System;
using Api.Contracts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Contracts.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("Api.Contracts.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Api.Contracts.Contract", b =>
                {
                    b.OwnsOne("Api.Contracts.Contract+VehicleInfo", "Vehicle", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Defects")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("HadIncidentsBeforeOwnership")
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("HadOwnershipIncidents")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("IncidentInformation")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Make")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Mileage")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Model")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("RegistrationCertificateNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("SDK")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("StateRegistrationNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("TechnicalInspectionValid")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("VIN")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("Api.Contracts.Contract+PartyInfo", "Buyer", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Company")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.OwnsOne("Api.Contracts.Contract+PartyInfo", "Seller", b1 =>
                        {
                            b1.Property<Guid>("ContractId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<bool>("Company")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ContractId");

                            b1.ToTable("Contracts");

                            b1.WithOwner()
                                .HasForeignKey("ContractId");
                        });

                    b.Navigation("Buyer");

                    b.Navigation("Seller");

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
